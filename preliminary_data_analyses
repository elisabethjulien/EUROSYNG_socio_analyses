######################
#   Data Overview    #
#                    #
######################
library(dplyr)
library(tidyr)
library(writexl)

####################################################################################################################################

#Overview of sociodemographic profiles of respondents:
# by counting occurrence of each unique value per column of interest, then calculating it as a percentage

#Summary percentage of gender
value_counts <- table(por_df$gender)
percentages_gender <- prop.table(value_counts) * 100
print(percentages_gender)

#Summary percentage of age
value_counts <- table(por_df$age)
percentages_age <- prop.table(value_counts) * 100
print(percentages_age)

#Summary percentage of education
value_counts <- table(por_df$edu)
percentages_education <- prop.table(value_counts) * 100
print(percentages_education)

#Summary percentage of respondents' residence's proximity to coast 
value_counts <- table(por_df$coast)
percentages_coast <- prop.table(value_counts) * 100
print(percentages_coast)

#Summary percentage of employment type
value_counts <- table(por_df$job)
percentages_job <- prop.table(value_counts) * 100
print(percentages_job)

#Summary percentage of respondents' residence's proximity to a marine proteted area
value_counts <- table(por_df$mpa_prox)
print(value_counts)
percentages_mpa <- prop.table(value_counts) * 100
print(percentages_mpa)

####################################################################################################################################

# Number of response and percentage reponse for question 1. Have you heard about Syngnathids previously?

df %>%
  filter(!is.na(syngnathid_prev)) %>%  # Remove NA values
  group_by(syngnathid_prev) %>%
  summarise(Count = n()) %>%
  mutate(Percentage = (Count / sum(Count)) * 100) %>%
  arrange(desc(Percentage))  # Sort from highest to lowest

# A tibble: 3 × 3
#  syngnathid_prev Count Percentage
#            <dbl> <int>      <dbl>
#1               0   546      58.1 
#2               1   357      38.0 
#3               2    37       3.94

####################################################################################################################################

# Number of response and percentage reponse for question 2. Please rate your knowledge about Syngnathids. 

df %>%
  filter(!is.na(perceived_knowledge)) %>%  # Remove NA values
  group_by(perceived_knowledge) %>%
  summarise(Count = n()) %>%
  mutate(Percentage = (Count / sum(Count)) * 100) %>%
  arrange(desc(Percentage))  # Sort from highest to lowest

  # A tibble: 4 × 3
  #perceived_knowledge Count Percentage
  #<ord>               <int>      <dbl>
#1 No knowledge          504     55.0  
#2 Basic knowledge       345     37.7  
#3 Knowledgeable          61      6.66 
#4 Expert knowledge        6      0.655

 #Most respondents (55%) believe they do not have any knowledge about syngnathids, 37% think they have basic knowledge, 6.7% believe they are knowledgeable, and less than 1% of respondents consider themselves to be experts on the topic. 

####################################################################################################################################
# Number of response and percentage reponse for question 4. Please rate the following statements as “True” or “False”. Please tick one option.

truefalse_columns <- c("trueorfalse_a", "trueorfalse_b", "trueorfalse_c", "trueorfalse_d", 
                      "trueorfalse_e", "trueorfalse_f", "trueorfalse_g", "trueorfalse_h", 
                      "trueorfalse_i", "trueorfalse_j", "trueorfalse_k")

# Reshape data into long format and remove NA values
df_long <- df %>%
  select(all_of(truefalse_columns)) %>%
  pivot_longer(cols = everything(), names_to = "question", values_to = "response") %>%
  filter(!is.na(response))  # Exclude NA values

# Count occurrences of each response per question
summary_table <- df_long %>%
  group_by(question, response) %>%
  summarise(count = n(), .groups = "drop") %>%
  group_by(question) %>%
  mutate(percentage = round(100 * count / sum(count), 2)) %>%
  pivot_wider(names_from = response, values_from = c(count, percentage), values_fill = 0)

# Print the summary table
print(summary_table)

####################################################################################################################################
# Number of response and percentage reponse for question 5. In general, how threatened do you think seahorses and pipefishes are by human activities and/or environmental impacts? 

# Count occurrences and calculate percentages
summary_table <- df %>%
  filter(!is.na(threatened)) %>%  # Remove NA values
  group_by(threatened) %>%
  summarise(count = n(), .groups = "drop") %>%
  mutate(percentage = round(100 * count / sum(count), 2)) %>%
  arrange(desc(count))  # Sort by count in descending order

# Print the table
print(summary_table)

####################################################################################################################################
# Number of response and percentage reponse for question 6. If you considered seahorses and pipefishes as species somehow threatened, please rank the following threats where 1=threat ranked most harmful to 7=threat ranked least harmful (scale from 1 to 7, no repeats).


# Define columns to check
rankthreat_columns <- c("rankthreat_a", "rankthreat_b", "rankthreat_c", "rankthreat_d", 
                        "rankthreat_e", "rankthreat_f", "rankthreat_g")

# Create summary table
summary_table <- data.frame(
  Column = rankthreat_columns,
  Sum = sapply(rankthreat_columns, function(col) sum(df[[col]], na.rm = TRUE)),
  Count_Non_NA = sapply(rankthreat_columns, function(col) sum(!is.na(df[[col]]))), # Count of non-NA responses
  Sum_Per_Total = sapply(rankthreat_columns, function(col) 
    sum(df[[col]], na.rm = TRUE) / sum(!is.na(df[[col]]))
  )
)

# Print the table
print(summary_table)

