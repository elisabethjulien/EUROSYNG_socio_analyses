# ======================================================================
# Setup: Load required libraries
# ======================================================================
library(dplyr)
library(tidyr)
install.packages("openxlsx")
library(openxlsx)

# ======================================================================
# Helper function: summarize categorical variables with NA count
# ======================================================================
summarise_with_NA <- function(data, column) {
  total <- nrow(data)
  na_count <- sum(is.na(data[[column]]))
  col_sym <- sym(column)
  
  summary_tbl <- data %>%
    filter(!is.na(!!col_sym)) %>%
    group_by(!!col_sym) %>%
    summarise(`No. of respondents` = n(), .groups = "drop") %>%
    mutate(`% of respondents` = round(100 * `No. of respondents` / sum(`No. of respondents`), 2)) %>%
    mutate(Response = as.character(!!col_sym)) %>%     # ‚úÖ ensure consistent type
    select(Response, `No. of respondents`, `% of respondents`) %>%
    bind_rows(tibble(
      Response = "NA responses",
      `No. of respondents` = na_count,
      `% of respondents` = round(100 * na_count / total, 2)
    )) %>%
    arrange(desc(Response == "NA responses"), desc(`No. of respondents`))
  
  return(summary_tbl)
}


# ======================================================================
# Q1 ‚Äì Heard about Syngnathids previously
# ======================================================================
addWorksheet(wb, "Q1_Heard_Syngnathids")
df
writeData(wb, "Q1_Heard_Syngnathids", summarise_with_NA(df, "syngnathid_prev"))

# ======================================================================
# Q2 ‚Äì Self-rated knowledge about Syngnathids
# ======================================================================
addWorksheet(wb, "Q2_Knowledge_Level")
writeData(wb, "Q2_Knowledge_Level", summarise_with_NA(df, "perceived_knowledge"))

# ======================================================================
# Q5 ‚Äì Perceived threat level
# ======================================================================
addWorksheet(wb, "Q5_Threat_Level")
writeData(wb, "Q5_Threat_Level", summarise_with_NA(df, "threatened"))

# ======================================================================
# Q7 ‚Äì Employment related to the sea
# ======================================================================
addWorksheet(wb, "Q7_Sea_Employment")
writeData(wb, "Q7_Sea_Employment", summarise_with_NA(df, "work_grouped"))

# ======================================================================
# üêö Q8 ‚Äì Ocean-related hobbies
# ======================================================================
addWorksheet(wb, "Q8_Hobbies")
writeData(wb, "Q8_Hobbies", summarise_with_NA(df, "hobbies_glm"))

# ======================================================================
# Q9 ‚Äì Membership in an environmental NGO
# ======================================================================
addWorksheet(wb, "Q9_NGO_Membership")
writeData(wb, "Q9_NGO_Membership", summarise_with_NA(df, "memberngo"))

# ======================================================================
# Q12 ‚Äì Frequency of consuming information
# ======================================================================
addWorksheet(wb, "Q12_Info_Frequency")
writeData(wb, "Q12_Info_Frequency", summarise_with_NA(df, "consump_freq"))

# ======================================================================
# Q14 ‚Äì Interest in receiving information
# ======================================================================
addWorksheet(wb, "Q14_Info_Interest")
writeData(wb, "Q14_Info_Interest", summarise_with_NA(df, "inform_interest"))

# ======================================================================
# Q15 ‚Äì Interest in conservation information
# ======================================================================
addWorksheet(wb, "Q15_Conservation_Info")
writeData(wb, "Q15_Conservation_Info", summarise_with_NA(df, "inform_conservation_interest"))

# ======================================================================
# Q17 ‚Äì Importance of conservation
# ======================================================================
addWorksheet(wb, "Q17_Conservation_Importance")
writeData(wb, "Q17_Conservation_Importance", summarise_with_NA(df, "conservation_importance"))

# ======================================================================
# Q18 ‚Äì Willingness to engage
# ======================================================================
addWorksheet(wb, "Q18_Willingness")
writeData(wb, "Q18_Willingness", summarise_with_NA(df, "will_to_engage"))

# ======================================================================
# Q20 ‚Äì Perceived ‚Äúsuperpower‚Äù of seahorses/pipefishes
# ======================================================================
na_count <- sum(is.na(df$superpower))
summary_table_final <- df %>%
  filter(!is.na(superpower)) %>%
  separate_rows(superpower, sep = ",\\s*") %>%
  mutate(superpower = case_when(
    superpower %in% c("Male pregnancy", "Gravidanza maschile") ~ "Male pregnancy",
    superpower %in% c("Beauty", "Bellezza") ~ "Beauty",
    superpower %in% c("All", "ALL", "All of the above", "All of them",
                      "all of the above", "Todas", "Unicita") ~ "All",
    superpower %in% c("Don't know", "NAO SEI") ~ NA_character_,
    superpower %in% c("Male pregnancy", "Uniqueness", "Beauty",
                      "Camouflage", "Immobility", "All", "Voracity") ~ superpower,
    TRUE ~ "Other"
  )) %>%
  filter(!is.na(superpower)) %>%
  group_by(superpower) %>%
  summarise(`No. of respondents` = n(), .groups = "drop") %>%
  mutate(`% of respondents` = round(100 * `No. of respondents` / sum(`No. of respondents`), 2)) %>%
  arrange(desc(`No. of respondents`)) %>%
  bind_rows(tibble(superpower = "NA responses",
                   `No. of respondents` = na_count,
                   `% of respondents` = (na_count / nrow(df)) * 100)) %>%
  relocate(superpower, `No. of respondents`, `% of respondents`) %>%
  rename(Response = superpower)

addWorksheet(wb, "Q20_Superpower")
writeData(wb, "Q20_Superpower", summary_table_final)

# ======================================================================
# Save Excel workbook
# ======================================================================
saveWorkbook(wb, "Syngnathid_Survey_Summaries.xlsx", overwrite = TRUE)

cat("Export complete: 'Syngnathid_Survey_Summaries.xlsx' created successfully.\n")

# ======================================================================
# Sociodemographic summaries (Gender, Age, Education, Coast, Job, MPA proximity)
# ======================================================================

# Make sure you have this helper function already defined above:
summarise_with_NA <- function(data, column) {
  total <- nrow(data)
  na_count <- sum(is.na(data[[column]]))
  col_sym <- sym(column)
  
  summary_tbl <- data %>%
    filter(!is.na(!!col_sym)) %>%
    group_by(!!col_sym) %>%
    summarise(`No. of respondents` = n(), .groups = "drop") %>%
    mutate(`% of respondents` = round(100 * `No. of respondents` / sum(`No. of respondents`), 2)) %>%
    mutate(Response = as.character(!!col_sym)) %>%
    select(Response, `No. of respondents`, `% of respondents`) %>%
    bind_rows(tibble(
      Response = "NA responses",
      `No. of respondents` = na_count,
      `% of respondents` = round(100 * na_count / total, 2)
    )) %>%
    arrange(desc(Response == "NA responses"), desc(`No. of respondents`))
  
  return(summary_tbl)
}

# ======================================================================
# Sociodemographic analysis
# ======================================================================

# Vector of all sociodemographic columns you want to summarise
socio_vars <- c("gender", "age", "edu", "coast", "job_other", "mpa_prox", "location")

# Create an Excel workbook for these results
library(openxlsx)
wb_socio <- createWorkbook()

# Loop through variables, create summary, and export to Excel
for (v in socio_vars) {
  addWorksheet(wb_socio, v)
  writeData(wb_socio, v, summarise_with_NA(df, v))
}

# Save workbook
saveWorkbook(wb_socio, "Sociodemographic_Summaries.xlsx", overwrite = TRUE)

cat("Export complete: 'Sociodemographic_Summaries.xlsx' created successfully.\n")
